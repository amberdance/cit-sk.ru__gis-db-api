plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.6'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'com.google.cloud.tools.jib' version '3.3.1'
}

group = 'ru.hard2code'
version = '1.0.6'
sourceCompatibility = '17'
archivesBaseName = rootProject.name


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    implementation 'org.flywaydb:flyway-core'
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:$openApiVersion"
    implementation "org.mapstruct:mapstruct:$mapStructVersion"

    runtimeOnly 'org.postgresql:postgresql'
    compileOnly 'org.projectlombok:lombok'

    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "org.mapstruct:mapstruct-processor:$mapStructVersion"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation "org.testcontainers:testcontainers:$testcontainersVersion"
    testImplementation "org.testcontainers:postgresql:$testcontainersVersion"
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}


compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile).configureEach {
    options.with {
        encoding = 'UTF-8'
    }
}

jib {
    from {
        image = 'bellsoft/liberica-openjdk-alpine-musl:17'
    }

    to {
        tags = [project.version.toString()]
        image = 'amberdance/gisapi'

//        print(System.getenv("TEST"));
        print(System.getenv("secrets.DOCKER_PASSWORD"));
//
//        auth {
//            username = System.getenv("secrets.DOCKER_USERNAME") ?: ""
//            password = System.getenv("secrets.DOCKER_PASSWORD") ?: ""
//        }
    }
}
